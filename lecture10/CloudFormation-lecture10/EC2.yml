AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 and sg create with IAM role


Parameters:
 NameBase: 
  Description: this is base name.
  Type: String
  Default: raisetech

 KeyName:
  Description: The name of the EC2 Key Pair
  Type: AWS::EC2::KeyPair::KeyName
  ConstraintDescription: Must be the name of an existing EC2 Key Pair

 MyCidrIp:
  NoEcho: true
  Type: String
  Description: Enter the CIDR IP for the security group ingress rule


Resources: 
 # SecurityGroup
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP access
      VpcId: !ImportValue lecture10-vpc-cf-VPCId
      Tags:
          - Key: Name
            Value: !Sub ${NameBase}-sg-ec2-lecture10
      # インバウンドルール
      SecurityGroupIngress: 
      # ssh
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref MyCidrIp
      
      # HTTP
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !ImportValue lecture10-alb-sg-id

      # HTTP
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref MyCidrIp


 # EC2
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      # AmazonLinux2 AMI ID
      ImageId: ami-0eda63ec8af4f056e
      # keypair
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces: 
      - AssociatePublicIpAddress: true
        DeviceIndex: 0
        GroupSet:
          -  !Ref EC2SecurityGroup
        SubnetId: !ImportValue lecture10-vpc-cf-PublicSubnet1Id
      BlockDeviceMappings: 
      - DeviceName: /dev/xvda
        Ebs:
          VolumeType: gp2
          DeleteOnTermination: true
          VolumeSize: 16
      IamInstanceProfile: !Ref S3AccessInstanceProfile
        

  # IAM Role
  S3AccessRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Tags:
        - Key: Name
          Value: !Sub "lecture10-iamrole-${NameBase}"

  # IAM Policy
  S3AccessPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3access
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:DeleteObject"
              - "s3:ListBucket"
            Resource: "arn:aws:s3:::*"
          - Effect: Allow
            Action: "*"
            Resource:
              - !Sub "arn:aws:s3:::${NameBase}-lecture10-cf"
              - !Sub "arn:aws:s3:::${NameBase}-lecture10-cf/*"
      Roles:
        - !Ref S3AccessRole

  # Instance Profile
  S3AccessInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref S3AccessRole


Outputs: 
 EC2Id: 
  Description: The ID of the created EC2 instance
  Value: !Ref EC2
  Export:
   Name: !Sub ${AWS::StackName}-EC2Id

 EC2SGId:
  Description: The ID of the created EC2 SecurityGroup
  Value: !Ref EC2SecurityGroup
  Export:
   Name: !Sub ${AWS::StackName}-EC2SGId
